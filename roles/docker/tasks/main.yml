---
- name: mkdir /etc/apt/keyrings to keep Docker GPG key
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'
- name: trust the Docker GPG key
  become: true
  block: 
  - ansible.builtin.shell: |
      curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg |  sudo gpg --yes --dearmor -o /etc/apt/keyrings/docker.gpg 
      sudo chmod a+r /etc/apt/keyrings/docker.gpg

- name: Add Docker repository
  ansible.builtin.shell: |
    mkdir /etc/apt/sources.list.d/ -p && \
    echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://mirrors.aliyun.com/docker-ce/linux/ubuntu \
      "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
      sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
- name: Update apt cache
  ansible.builtin.apt:
    update_cache: yes
- name: Install Docker packages
  ansible.builtin.apt:
    name: "{{ item }}"
    state: latest
  loop:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - docker-buildx-plugin
    - docker-compose-plugin

# sudo mkdir -p /etc/systemd/system/docker.service.d
# sudo vim /etc/systemd/system/docker.service.d/http-proxy.conf
- name: use proxy?
  block: 
    - name: Create Docker systemd directory
      ansible.builtin.file:
        path: /etc/systemd/system/docker.service.d
        state: directory
    - name: Create Docker proxy configuration
      ansible.builtin.template:
        src: http-proxy.conf.j2
        dest: /etc/systemd/system/docker.service.d/http-proxy.conf
  when: use_proxy is defined and use_proxy != ""
- name: Ensure Docker service is running
  ansible.builtin.systemd:
    name: docker
    state: restarted
    enabled: true
    daemon_reload: true

- name: cri-docker
  ansible.builtin.uri:
    url: "{{ download_url }}/cri-docker/cri-dockerd-{{cri_docker_version}}.amd64.tgz"
    dest: /tmp/cri-dockerd.tgz
    mode: '0644'
- name: unarchive cri-docker
  ansible.builtin.unarchive:
    src: /tmp/cri-dockerd.tgz
    dest: /usr/local/bin/
    remote_src: yes
    mode: '0755'
    extra_opts:
      - --strip-components=1
- name: cri-docker systemd service
  ansible.builtin.template:
    src: cri-docker.service.j2
    dest: /etc/systemd/system/cri-docker.service
- name: cri-docker socket
  ansible.builtin.template:
    src: cri-docker.socket.j2
    dest: /etc/systemd/system/cri-docker.socket
- name: start cri-docker
  ansible.builtin.systemd:
    name: cri-docker
    state: restarted
    enabled: true
    daemon_reload: true