---
# 下载
- name: download kube components on remote
  block:
  - name: masters
    block:
      - name: download and install kube components for masters
        ansible.builtin.uri:
          url: "{{ download_url }}/kubernetes/{{ k8s_version }}/{{ item }}"
          dest: /tmp/kubernetes-server-linux-amd64.tar.gz
        loop:
          - kubernetes-server-linux-amd64.tar.gz
      - name: download and install etcd
        ansible.builtin.uri:
          url: "{{ download_url }}/etcd/etcd-{{ etcd_version }}-linux-amd64.tar.gz"
          dest: /tmp/etcd-linux-amd64.tar.gz
    when: inventory_hostname in groups['master']
  - name: nodes
    block:
      - name: download and install kube components for nodes
        ansible.builtin.uri:
          url: "{{ download_url }}/kubernetes/{{ k8s_version }}/{{ item }}"
          dest: /tmp/kubernetes-node-linux-amd64.tar.gz
        loop:
          - kubernetes-node-linux-amd64.tar.gz
    when: inventory_hostname in groups['node_add']
  when: remote_download | bool
- name: scp kube components from local
  block:
  - block: 
      - name: download components on local
        ansible.builtin.uri:
          url: "{{ download_url }}/kubernetes/{{ k8s_version }}/{{ item }}"
          dest: downloads/
        loop:
          - kubernetes-server-linux-amd64.tar.gz
          - kubernetes-node-linux-amd64.tar.gz
        delegate_to: localhost
      - name: download etcd on local
        ansible.builtin.uri:
          url: "{{ download_url }}/etcd/etcd-{{ etcd_version }}-linux-amd64.tar.gz"
          dest: downloads/etcd-linux-amd64.tar.gz
        delegate_to: localhost
  - block:
      - name: copy kube components for masters
        ansible.builtin.copy:
          src: downloads/kubernetes-server-linux-amd64.tar.gz
          dest: /tmp/kubernetes-server-linux-amd64.tar.gz
        when: inventory_hostname in groups['master']
      - name: copy etcd
        ansible.builtin.copy:
          src: downloads/etcd-linux-amd64.tar.gz
          dest: /tmp/etcd-linux-amd64.tar.gz
        when: inventory_hostname in groups['master']
      - name: copy kube components for nodes
        ansible.builtin.copy:
          src: downloads/kubernetes-node-linux-amd64.tar.gz
          dest: /tmp/kubernetes-node-linux-amd64.tar.gz
        when: inventory_hostname in groups['node_add']
  when: not remote_download | bool
  

# # 安装
# - name: install kube components for masters
#   block:
#     - name: archive kube components
#       ansible.builtin.unarchive:
#         src: /tmp/kubernetes-server-linux-amd64.tar.gz
#         dest: /usr/local/bin/
#         remote_src: yes
#       include:  # 指定要解压的文件或目录
#         - "kubernetes/server/bin/kube-apiserver"
#         - "kubernetes/server/bin/kube-controller-manager"
#         - "kubernetes/server/bin/kube-scheduler"
#         - "kubernetes/server/bin/kube-proxy"
#         - "kubernetes/server/bin/kubelet"
#         - "kubernetes/server/bin/kubectl"
#         - "kubernetes/server/bin/kubeadm"
#     - name: archive etcd
#       ansible.builtin.unarchive:
#         src: /tmp/etcd-linux-amd64.tar.gz
#         dest: /usr/local/bin/
#         remote_src: yes
#       include:  # 指定要解压的文件或目录
#         - "etcd/etcd"
#         - "etcd/etcdctl"
#   when: inventory_hostname in groups['master']
# - name: install kube components for nodes
#   block:
#     - name: archive kube components 
#       ansible.builtin.unarchive:
#         src: /tmp/kubernetes-node-linux-amd64.tar.gz
#         dest: /usr/local/bin/
#         remote_src: yes
#       include:  # 指定要解压的文件或目录
#         - "kubernetes/node/bin/kubelet"
#         - "kubernetes/node/bin/kube-proxy"
#   when: inventory_hostname in groups['node_add']



